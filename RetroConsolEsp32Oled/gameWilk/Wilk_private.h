#ifndef WILK_PRIVATE_H
#define WILK_PRIVATE_H

  extern const GameInfo GameInfo_Wilk;

	const uint8_t HandScare[] PROGMEM = {                                          // Поднятые руки волка
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x64, 0xe0, 
		0x00, 0x00, 0x39, 0x20, 0xd4, 0xa0, 0x00, 0x00, 0x69, 0x70, 0xd1, 0x20, 0x00, 0x00, 0x4a, 0x50, 
		0xa0, 0x20, 0x00, 0x00, 0x24, 0x98, 0xc0, 0x40, 0x00, 0x00, 0x00, 0x38, 0x70, 0x40, 0x00, 0x00, 
		0x20, 0x10, 0x1c, 0x40, 0x00, 0x00, 0x20, 0x60, 0x06, 0x60, 0x00, 0x00, 0x67, 0xc0, 0x03, 0x20, 
		0x00, 0x00, 0x0c, 0x00, 0x01, 0xa0, 0x00, 0x00, 0xd8, 0x00, 0x00, 0xf0, 0x00, 0x01, 0x90, 0x00, 
		0x00, 0x10, 0x00, 0x01, 0x60, 0x00, 0x00, 0x78, 0x00, 0x02, 0xc0, 0x00, 0x00, 0x28, 0x00, 0x02, 
		0x80, 0x00, 0x00, 0x08, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

	const uint8_t EggBroken[] PROGMEM = {                                          // Разбитое яйцо
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
        0x30, 0x00, 0x03, 0x31, 0x00, 0x01, 0xe7, 0x00, 0x30, 0xff, 0x00, 0x79, 0xce, 0x20, 0x5b, 0xc4, 
        0x78, 0x78, 0xe6, 0x68, 0x11, 0xba, 0x38, 0x03, 0xf7, 0x30, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x00};

	const uint8_t Wolf_nu_pogodi[] PROGMEM = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0xe0, 0x0e, 0x00, 
        0x03, 0x02, 0x41, 0x80, 0x04, 0x72, 0x40, 0x40, 0x08, 0x4a, 0x40, 0x20, 0x10, 0x4a, 0x40, 0x10, 
        0x20, 0x49, 0x80, 0x10, 0x20, 0x48, 0x00, 0x88, 0x20, 0x00, 0x02, 0x08, 0x4e, 0xee, 0xee, 0x88, 
        0x4a, 0xaa, 0xaa, 0x88, 0x4a, 0xaa, 0xaa, 0x90, 0x4e, 0xee, 0xee, 0x90, 0x48, 0x02, 0x00, 0x20, 
        0x48, 0x06, 0x00, 0xc0, 0x40, 0x00, 0x03, 0x00, 0x40, 0x00, 0x0c, 0x00, 0x20, 0x00, 0x30, 0x00, 
        0x20, 0x00, 0xc0, 0x00, 0x20, 0x03, 0x00, 0x00, 0x20, 0x0c, 0x00, 0x00, 0x20, 0x30, 0x00, 0x00, 
        0x10, 0xc0, 0x0c, 0x40, 0x11, 0x19, 0xcd, 0xe0, 0x16, 0x0a, 0x65, 0x20, 0x14, 0x3b, 0xee, 0x20, 
        0x0c, 0x7f, 0xfd, 0x20, 0x0c, 0x27, 0xf9, 0x20, 0x04, 0x2f, 0xfa, 0x60, 0x00, 0x2d, 0x3e, 0x60, 
        0x07, 0x08, 0x7e, 0xe0, 0x1f, 0x0f, 0xef, 0xf0, 0x07, 0xd9, 0x27, 0xf0, 0x06, 0x2d, 0xa7, 0x90, 
        0x0c, 0x1f, 0xef, 0xd0, 0x06, 0x0a, 0x0f, 0xe0, 0x07, 0xc1, 0x8f, 0xb0, 0x05, 0x3f, 0x8f, 0xa0, 
        0x03, 0xf8, 0x0f, 0xe0, 0x02, 0x63, 0xcf, 0xa0, 0x01, 0x8c, 0x87, 0x00, 0x00, 0x71, 0x86, 0x00, 
        0x00, 0x00, 0x84, 0x00, 0x00, 0x03, 0xfe, 0x00};

	const uint8_t HandLeftUp[] PROGMEM = {                                        // Рука слева вверху
		0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0e, 0xff, 0x00, 0x00, 
		0x0c, 0x91, 0x80, 0x00, 0x0c, 0xf0, 0x80, 0x00, 0x0c, 0x4c, 0xc0, 0x00, 0x0c, 0x56, 0x40, 0x00, 
		0x0c, 0x66, 0x60, 0x00, 0x0e, 0x26, 0x20, 0x00, 0x06, 0xff, 0x30, 0x00, 0x0f, 0xf3, 0x90, 0x00, 
		0x1f, 0xf1, 0xd0, 0x00, 0x7c, 0xf1, 0xd8, 0x00, 0x7c, 0x79, 0xe8, 0x00, 0x3e, 0x19, 0xd8, 0x00, 
		0x1d, 0x80, 0xc0, 0x00, 0x1c, 0x40, 0x60, 0x00, 0x0e, 0x00, 0x10, 0x00, 0x06, 0x0f, 0x8e, 0x00, 
		0x03, 0xf8, 0xe3, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00};

	const uint8_t HandLeftDown[] PROGMEM = {                                      // Рука слева внизу
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x00, 0xf0, 0xf8, 0x00, 
		0x01, 0x81, 0x83, 0x80, 0x03, 0x05, 0x1f, 0x00, 0x03, 0x57, 0xfe, 0x00, 0x01, 0x5e, 0x0c, 0x00, 
		0x01, 0xf0, 0x18, 0x00, 0x00, 0x98, 0x30, 0x00, 0x01, 0x9c, 0x60, 0x00, 0x00, 0x98, 0x60, 0x00, 
		0x0f, 0xcc, 0xc0, 0x00, 0x3f, 0xf9, 0xc0, 0x00, 0x7f, 0xff, 0x80, 0x00, 0x7f, 0xff, 0x00, 0x00, 
		0x7f, 0xff, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 
		0x0f, 0xfe, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

	const uint8_t HandRightUp[] PROGMEM = {                                       // Рука справа вверху
		0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x7f, 0x80, 0x01, 0xdb, 0xc0, 0x07, 0x12, 0xc0, 0x1c, 
		0x5e, 0xe0, 0x78, 0x72, 0x60, 0x3e, 0x32, 0x60, 0x03, 0x3e, 0x60, 0x00, 0xf2, 0x60, 0x00, 0x3f, 
		0xfc, 0x00, 0xff, 0xfe, 0x01, 0xff, 0xfe, 0x03, 0xf7, 0xfe, 0x03, 0xe3, 0x9e, 0x01, 0xe3, 0x1c, 
		0x01, 0xf3, 0x2c, 0x00, 0xf0, 0x48, 0x00, 0x70, 0x18, 0x01, 0xc0, 0x70, 0x0e, 0x00, 0x10, 0x3e, 
		0x7f, 0xe0, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00};

	const uint8_t HandRightDown[] PROGMEM = {                                     // Рука справа внизу
		0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x3c, 0x7f, 0xe0, 0x00, 0x3f, 0xe3, 0xf0, 0x00, 
		0x1c, 0x01, 0x78, 0x00, 0x07, 0x07, 0x3c, 0x00, 0x21, 0x8f, 0xec, 0x00, 0x38, 0xc6, 0x4e, 0x00, 
		0x1c, 0x7f, 0xc6, 0x00, 0x1e, 0x1e, 0xc6, 0x00, 0x1f, 0x8e, 0xc6, 0x00, 0x0c, 0x47, 0xff, 0xe0, 
		0x06, 0x7f, 0xff, 0xf0, 0x07, 0x1c, 0x3f, 0xf0, 0x03, 0x00, 0xff, 0xe0, 0x01, 0x80, 0xcf, 0xe0, 
		0x00, 0xc0, 0x3f, 0xc0, 0x00, 0x60, 0xef, 0xc0, 0x00, 0x60, 0x1f, 0x80, 0x00, 0x71, 0xff, 0x00, 
		0x00, 0x3c, 0x7e, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00};

	const uint8_t WolfLeft[] PROGMEM = {                                          // Волк влево
		0x00, 0x00, 0x0c, 0x40, 0x00, 0x19, 0xcd, 0xe0, 0x00, 0x0a, 0x65, 0x20, 0x00, 0x3b, 0xee, 0x20, 
		0x00, 0x7f, 0xfd, 0x20, 0x00, 0x27, 0xf9, 0x20, 0x00, 0x2f, 0xfa, 0x60, 0x00, 0x2d, 0x3e, 0x60, 
		0x07, 0x08, 0x7e, 0xe0, 0x07, 0x0f, 0xef, 0xf0, 0x07, 0xd9, 0x27, 0xf0, 0x06, 0x2d, 0xa7, 0x90, 
		0x0c, 0x1f, 0xef, 0xd0, 0x06, 0x0a, 0x0f, 0xe0, 0x07, 0xc1, 0x8f, 0xb0, 0x05, 0x3f, 0x8f, 0xa0, 
		0x03, 0xf8, 0x0f, 0xe0, 0x02, 0x63, 0xcf, 0xa0, 0x01, 0x8c, 0x87, 0x00, 0x00, 0x71, 0x86, 0x00, 
		0x00, 0x03, 0x0e, 0x00, 0x00, 0x07, 0x1e, 0x00, 0x00, 0x06, 0x18, 0x00, 0x00, 0x0c, 0x38, 0x00, 
		0x00, 0x0c, 0x70, 0x00, 0x00, 0x1c, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x80, 0x00, 0x3f, 0xc0, 0x80, 
		0x00, 0x3f, 0xc1, 0x80, 0x00, 0xff, 0xcf, 0x80, 0x00, 0xff, 0xf9, 0x00, 0x01, 0xff, 0xe6, 0x00, 
		0x03, 0xbf, 0x18, 0x00, 0x0f, 0x00, 0x06, 0x00, 0x39, 0x81, 0xaf, 0x00, 0x63, 0xc1, 0xf9, 0xc0, 
		0x7d, 0xff, 0xf0, 0x60, 0x47, 0x00, 0x1e, 0x20, 0x47, 0x00, 0x02, 0x40, 0x31, 0xc0, 0x02, 0xc0, 
		0x1c, 0x60, 0x04, 0x80, 0x03, 0x30, 0x05, 0xbc, 0x00, 0xc8, 0x09, 0xee, 0x7f, 0x64, 0x0f, 0x3c, 
		0xd0, 0xe2, 0x19, 0xd8, 0xce, 0x02, 0x3c, 0x70, 0x39, 0xfc, 0x3f, 0xc0, 0x0f, 0xf0, 0x1e, 0x00};

	const uint8_t WolfRight[] PROGMEM = {                                         // Волк вправо
		0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0xde, 0x60, 0x00, 
		0x00, 0x8d, 0xd7, 0x00, 0x00, 0x97, 0xfc, 0x00, 0x00, 0x97, 0xff, 0x00, 0x00, 0x97, 0xfd, 0x00, 
		0x01, 0x9f, 0xf2, 0x00, 0x01, 0xff, 0x3a, 0x00, 0x03, 0xff, 0xcc, 0x00, 0x02, 0x7a, 0x78, 0x40, 
		0x07, 0xf2, 0xc8, 0xe0, 0x07, 0xfb, 0xdb, 0xe0, 0x06, 0xf0, 0x76, 0x60, 0x02, 0xf9, 0x98, 0x20, 
		0x02, 0xf1, 0xe0, 0xa0, 0x00, 0xf8, 0xbf, 0xe0, 0x00, 0xeb, 0xdd, 0x40, 0x00, 0x63, 0x67, 0x80, 
		0x00, 0xe3, 0x33, 0x00, 0x00, 0x71, 0xde, 0x00, 0x00, 0x31, 0xc0, 0x00, 0x00, 0x38, 0xc0, 0x00, 
		0x00, 0x18, 0xc0, 0x00, 0x0e, 0x1c, 0xc0, 0x00, 0x0b, 0x1e, 0xc0, 0x00, 0x89, 0x8f, 0xe0, 0x00, 
		0xe8, 0xcf, 0xe0, 0x00, 0xfa, 0x7f, 0xe0, 0x00, 0xbf, 0xbf, 0xf0, 0x00, 0xad, 0xff, 0xf8, 0x00, 
		0x51, 0xf7, 0xf8, 0x00, 0x37, 0x41, 0xd8, 0x00, 0x2b, 0x60, 0x0c, 0x00, 0x17, 0x30, 0x3e, 0x00, 
		0x1e, 0x0f, 0xf9, 0x80, 0x0c, 0x00, 0x38, 0xc0, 0x00, 0x00, 0x17, 0x80, 0x00, 0x00, 0x18, 0x40, 
		0x00, 0x00, 0x60, 0x40, 0x00, 0x01, 0x87, 0x80, 0x00, 0x06, 0x7c, 0x00, 0x00, 0x0c, 0xc0, 0x00, 
		0x00, 0x19, 0xfc, 0x00, 0x00, 0x0c, 0x07, 0x80, 0x00, 0x0f, 0xfe, 0xc0, 0x00, 0x01, 0xe7, 0x80};

	void StartScreen();
	void WolfMove();
	void StartWolf();
	void EggMoveLeftUp();
	void EggMoveLeftDown();
	void EggMoveRightUp();
	void EggMoveRightDown();
	void CatcheLeftUp();
	void CatcheLeftDown();
	void CatcheRightUp();
	void CatcheRightDown();
	void GenerationEggs();
	void EggIsCaught();
	void Location();
	void ShowScore();
	void LevelComplicate();
	bool GameOver();
	void MoveEggs();    
	void GameWilk();
	void NuPogodiSetup();
	void NuPogodiLoop();
	void playEggCaughtSound();
	void playEggBrokenSound();
	void playClickSound();
	void playGameOverSound();
	void Film();
	void EggIsBroken(); 
	void StartAfterBrokenEgg();

	extern int score;

	int MassEggs[5];
	int MassWolfPosition;
	int eventWolf;
	int previousWolf;
	int wolfPositionStart;
	int eggsPosition;
	int timeEggs;
	int eventEggs;
	bool eggJustBroken = false;
    int WolfSesionScore = 0;
	
	int s;
	int eventGenerationEggs;
	int quantityScore;
	const int levelComplicate1 = 6;
	const int levelComplicate2 = 3;
	const int levelComplicate3 = 2;
	const int levelComplicate4 = 1;
	int eggsLeftUp[7];
	int eggsLeftDown[7];
	int eggsRightUp[7];
	int eggsRightDown[7];
	uint32_t Tm;


	#define NOTE_C4 262
	#define NOTE_A4 440
	#define NOTE_F5 698
	int lose[] = { NOTE_F5, NOTE_A4, NOTE_C4 };
	int loseNoteDurations[] = { 2, 4, 4 };

	int record = 0;
	int brokegg;

	int GameDelay = 500;
	int framesTillSpeedRestart = 0;
	bool gameEnd = false;
	

    const int TON_EGG_FREQ = 400;
	const int TON_EGG_CZAS = 10;

	const int TON_WOLF_FREQ = 440;
	const int TON_WOLF_CZAS = 20;

	const int TON_POINT_FREQ = 700;
	const int TON_POINT_CZAS = 50;

	const int TON_ERROR_FREQ = 1320;
	const int TON_ERROR_CZAS = 80;



	const int TON_CLICK_FREQ = 1000;
	const int TON_CLICK_CZAS = 30;

	const int TON_GAMEOVER_FREQ = 220;
	const int TON_GAMEOVER_CZAS = 1000;




















#endif
